stages:
  - pre-check
  - build
  - publish

workflow:
  rules:
    # Disable those non-protected push triggered pipelines
    - if: '$CI_COMMIT_REF_NAME != "main" && $CI_COMMIT_TAG !~ /^v\d+\.\d+(\.\d+)?($|-)/ && $CI_PIPELINE_SOURCE == "push"'
      when: never
    - when: always

variables:
  GIT_STRATEGY: clone
  GIT_DEPTH: 1
  IDF_SKIP_CHECK_SUBMODULES: 1
  IDF_CI_BUILD: "1"

include:
  - project: espressif/shared-ci-dangerjs
    ref: master
    file: danger.yaml
run-danger-mr-linter:
  stage: pre-check
  tags:
    - internet

pre_commit_check:
  stage: pre-check
  image: ${GITLAB_DOCKER_REGISTRY}/qa/dockerfiles/qa-python-env:2
  script:
    - pre-commit run --all-files
  tags:
    - build
    - internet

build_iperf:
  stage: build
  rules:
    - when: on_success
  image: ${ESP_IMG}
  parallel:
    matrix:
      - ESP_IMG: espressif/idf:release-v4.4
      - ESP_IMG: espressif/idf:release-v5.0
      - ESP_IMG: espressif/idf:release-v5.1
      - ESP_IMG: espressif/idf:release-v5.2
      - ESP_IMG: espressif/idf:latest
  artifacts:
    paths:
      - "**/build*/build_log.txt"
      - "**/build*/config/sdkconfig.json"
    when: always
    expire_in: 5 days
  script:
    - pip install idf-build-apps
    - idf-build-apps build
  after_script:
    - ls apps/iperf
  tags:
    - build
    - internet

# idf-build-apps 2.0 do not support python 3.6
build_iperf_v43:
  stage: build
  image: espressif/idf:v4.3.7
  rules:
    - when: on_success
  variables:
    LC_ALL: C.UTF-8
  artifacts:
    paths:
      - "**/build*/build_log.txt"
      - "**/build*/config/sdkconfig.json"
    when: always
    expire_in: 5 days
  script:
    - pip install idf-build-apps\<2 packaging\<22 idf-component-manager==1.4
    - idf-build-apps build
  after_script:
    - ls apps/iperf
  tags:
    - build
    - internet

publish_components:
  stage: publish
  image: ${GITLAB_DOCKER_REGISTRY}/qa/dockerfiles/qa-python-env:2
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+(\.\d+)?($|-)/'
  needs:
    - job: build_iperf
      artifacts: false
    - job: build_iperf_v43
      artifacts: false
  before_script:
    - pip3 install Commitizen
    - cz version -v
    - git config user.name "${GITLAB_USER_LOGIN}"
    - git config user.email "${GITLAB_USER_EMAIL}"
  script:
    - python tools/check_version.py --version ${CI_COMMIT_TAG}
    # push to github and publish components
    - gitlab project-protected-tag create --name ${CI_COMMIT_TAG} --project-id=${CI_PROJECT_ID} --private-token ${GITLAB_PRIVATE_TOKEN}
    # bump new version: default PATCH
    - git branch -D bump/new_patch_version || true
    - git checkout -b bump/new_patch_version
    - cz bump --increment=PATCH
    # Do not add tag for new version
    - git tag --delete v$(cz version --project) || true
    - |
      git push -f \
        -o merge_request.create \
        -o merge_request.title="bump: ${CI_COMMIT_TAG} -> next patch version" \
        -o merge_request.assign="${GITLAB_USER_LOGIN}" \
        origin bump/new_patch_version
  tags:
    - host_test
